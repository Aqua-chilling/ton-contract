;;
;; Header files for SampleClaimContract
;; NOTE: declarations are sorted for optimal order
;;

;; __tact_verify_address
slice __tact_verify_address(slice address) inline;

;; __tact_load_address
(slice, slice) __tact_load_address(slice cs) inline;

;; __tact_load_address_opt
(slice, slice) __tact_load_address_opt(slice cs) inline;

;; __tact_store_address
builder __tact_store_address(builder b, slice address) inline;

;; __tact_store_address_opt
builder __tact_store_address_opt(builder b, slice address) inline;

;; __tact_not_null
forall X -> X __tact_not_null(X x) inline;

;; __tact_context_get
(int, slice, int, slice) __tact_context_get() inline;

;; __tact_store_bool
builder __tact_store_bool(builder b, int v) inline;

;; __tact_dict_set_int_int
(cell, ()) __tact_dict_set_int_int(cell d, int kl, int k, int v, int vl) inline;

;; __tact_dict_get_int_int
int __tact_dict_get_int_int(cell d, int kl, int k, int vl) inline;

;; __tact_slice_eq_bits
int __tact_slice_eq_bits(slice a, slice b) inline;

;; $TokenTransfer$_store
builder $TokenTransfer$_store(builder build_0, (int, int, slice, slice, cell, int, slice) v) inline_ref;

;; $TokenTransfer$_store_cell
cell $TokenTransfer$_store_cell((int, int, slice, slice, cell, int, slice) v) inline;

;; $ClaimEvent$_store
builder $ClaimEvent$_store(builder build_0, (int, int) v) inline;

;; $ClaimEvent$_store_cell
cell $ClaimEvent$_store_cell((int, int) v) inline;

;; $ClaimInfo$_load
(slice, ((slice, slice))) $ClaimInfo$_load(slice sc_0) inline;

;; $UpdateJetton$_load
(slice, ((slice))) $UpdateJetton$_load(slice sc_0) inline;

;; $SampleClaimContract$_store
builder $SampleClaimContract$_store(builder build_0, (slice, slice, int, int, cell) v) inline;

;; $SampleClaimContract$_load
(slice, ((slice, slice, int, int, cell))) $SampleClaimContract$_load(slice sc_0) inline;

;; $Context$_get_sender
_ $Context$_get_sender((int, slice, int, slice) v) inline;

;; $SampleClaimContract$init$_load
(slice, ((slice, int))) $SampleClaimContract$init$_load(slice sc_0) inline;

;; $SampleClaimContract$_contract_init
(slice, slice, int, int, cell) $SampleClaimContract$_contract_init(slice $owner, int $public_key) impure inline_ref;

;; $SampleClaimContract$_contract_load
(slice, slice, int, int, cell) $SampleClaimContract$_contract_load() impure inline_ref;

;; $SampleClaimContract$_contract_store
() $SampleClaimContract$_contract_store((slice, slice, int, int, cell) v) impure inline;

;; $global_emptyCell
cell $global_emptyCell() impure inline;

;; $Cell$_fun_asSlice
slice $Cell$_fun_asSlice(cell $self) impure inline;

;; $global_emptySlice
slice $global_emptySlice() impure inline;

;; $global_send
() $global_send((int, slice, int, int, cell, cell, cell) $params) impure inline_ref;

;; $global_emit
() $global_emit(cell $body) impure inline;

;; $SendParameters$_constructor_to_value_mode_bounce_body
((int, slice, int, int, cell, cell, cell)) $SendParameters$_constructor_to_value_mode_bounce_body(slice to, int value, int mode, int bounce, cell body) inline;

;; $TokenTransfer$_constructor_queryId_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload
((int, int, slice, slice, cell, int, slice)) $TokenTransfer$_constructor_queryId_amount_destination_response_destination_custom_payload_forward_ton_amount_forward_payload(int queryId, int amount, slice destination, slice response_destination, cell custom_payload, int forward_ton_amount, slice forward_payload) inline;

;; $ClaimEvent$_constructor_claimId_amount
((int, int)) $ClaimEvent$_constructor_claimId_amount(int claimId, int amount) inline;
